{
  "Environment": "Production",

  "ConnectionStrings": {
    // Database connection strings
    "SyncAgent": "secrets.json",
    "Default": "secrets.json"
  },

  "api": {
    "api": "secrets.json",
    "key": "secrets.json"
  },

  "jobs": {
    "Daily": [
      {
        "url": "Currency",
        "verb": "POST",
        "sql": "select Code = IsNull(IMPORT, CUR_CODE), Description = CUR_NAME, LastModified = LAST_MODIFIED FROM TBL_CURRENCY WHERE LAST_MODIFIED > IsNull(@LastModified,'1900-01-01')",
        "orderBy": [ "last_modified", "cur_code" ],
        "progress": [
          "LastModified",
          "cur_code"
        ],
        "enabled": "true"
      },
      {
        "url": "Office",
        "sql": "SELECT Code=OFFC_CODE, Description=OFFC_DESC, Currency=IsNull(c.IMPORT, c.CUR_CODE), Active=case when o.INACTIVE='N' then 1 else 0 end, LastModified=o.LAST_MODIFIED Custom_Foo='foo', Custom_Bar='bar' FROM HBM_OFFICE o INNER JOIN TBL_CURRENCY c on (o.CUR_CODE=c.CUR_CODE) WHERE o.LAST_MODIFIED > IsNull(@LastModified,'1900-01-01') order by last_modifier, offc_code",
        "progress": [
          "LastModified",
          "offc_code"
        ]
      }
    ]
    //"Hourly": [
    //  {
    //    "url": "Employee"
    //  },
    //  {
    //    "url": "ClientGroup"
    //  },
    //  {
    //    "url": "Client"
    //  },
    //  {
    //    "url": "Matter",
    //    "LayeredProperties": [
    //      {
    //        "Connection": "DMS",
    //        "SQL": "select",
    //        "InvoiceEmailPrefix=foo" "from",
    //        "xxx" "where",
    //        "code1=@ClientCode" "and",
    //        "code2=@MatterNumber"
    //      }
    //    ]
    //  }
    //],
    //"NearRealTime": [
    //  {
    //    "url": "bill",
    //    "SQL": "select ... From events join bill where row_uno>@RowUno and event_type='post' order by row_uno",
    //    "Progress": [ "RowUno" ],
    //    "File": {
    //      "Path": "...\\{prebillnumber}.bil",
    //      "Name": "{prebillnumber}.RTF"
    //    },
    //    "collections": {
    //      "Matters": "select ... where BILL_UNO=@BillUno",
    //      "Payors": "select ... where BILL_UNO=@BillUno"
    //    }
    //  },
    //  {
    //    "url": "bill/{BillNumber}/applycash"
    //  },
    //  {
    //    "url": "bill/{BillNumber}/Cancel"
    //  }
    //]
  },

  "DummyService": {
    "Foo": "FOO_1",
    "Bar": "BAR_2"
  },

  "InfrastructureServices": {
    // Configure which infrastructure services are to be used for each interface
    "IMailSendingService": "SmtpService",
    "IAuthenticatedIdentity": "WindowsIdentityService",
    "IFileService": "FileSystemService"
    //"IFileService": "AzureBlobService"
  },

  "SmtpService": {
    // Configures how the SmtpService connects to the SMTP Server or Relay
    "Host": "my.smtp.server",
    "Port": 25,
    "From": "do.not.reply@example.com"
    //"OverrideRecipients": [ "override@example.com" ]
    //"Bcc": ["",""]
  },

  "FileSystemService": {
    "Root": "C:\\Temp\\ConsoleApp"
  },

  "AzureBlobService": {
    // See secrets.json
    "ContainerName": "",
    "AccountName": "",
    "AccountKey": ""
  },

  "Serilog": {
    // Logging configuration
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "restrictedToMinimumLevel": "Debug",
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Method}({Line}) {Message:j}{NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "logs/Diagnostics-.log",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {SourceContext}.{Method}({Line}) {Message:j}{NewLine}{Exception}"
        }
      }
    ]
  }
}